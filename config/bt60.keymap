#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
	macros {
		alt_o_0248: alt_o_0248 {
		    label = "ZM_alt_o_0248";
		    compatible = "zmk,behavior-macro";
		    #binding-cells = <0>;
		    bindings 
			= <&macro_press &kp LALT>
			, <&macro_tap &kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N8>
			, <&macro_release &kp LALT>
			;
		};
		email: email {
		    label = "email";
		    compatible = "zmk,behavior-macro";
		    #binding-cells = <0>;
		    bindings 
			=  <&macro_tap &kp A &kp L &kp E &kp X &kp K &kp I &kp C &kp K &kp E &kp R>
			, <&macro_press &kp RALT>
			, <&macro_tap &kp N2>
			, <&macro_release &kp RALT>
			, <&macro_tap &kp H &kp O &kp T &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>
			;
		};
		CAPSLIGHT: CAPSLIGHT {
		    label = "ZM_CAPSLIGHT";
		    compatible = "zmk,behavior-macro";
		    #binding-cells = <0>;
		    bindings 
			= <&macro_tap &kp CAPS>
			, <&macro_tap &rgb_ug RGB_COLOR_HSB(0, 100, 50)>
			, <&macro_tap &rgb_ug RGB_TOG>
			;
		};
		Win_Lock: Win_Lock {
		    label = "ZM_winlock";
		    compatible = "zmk,behavior-macro";
		    #binding-cells = <0>;
		    bindings 
			= <&macro_press &kp RGUI>
			, <&macro_tap &kp L>
			, <&macro_release &kp RGUI>
			;
		};
	};
	    
	keymap {
		compatible = "zmk,keymap";

		default_layer {
				// ------------------------------------------------------------------------------------------
				// |  `  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |   BKSP
				// | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |        |
				// | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |  #  | ENTER |
				// |  SHIFT|  \ |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  | /   |    SHIFT    |
				// |  CTL  |  WIN  |  ALT  |            SPACE               | ALT | 1    |  MENU    |  CTRL|
				// ------------------------------------------------------------------------------------------
			bindings = <

				&kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp  N8   &kp  N9 &kp  N0  &kp MINUS &kp EQUAL &kp BSPC
				&kp TAB  &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp  I    &kp  O  &kp  P   &kp LBKT &kp RBKT
				&mo 2  &kp A  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp  K    &kp  L  &kp SEMI &kp SQT &kp NON_US_HASH  &kp RET
				&kp LSHFT &kp NON_US_BSLH &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH         &kp RSHFT
				&kp LCTRL &mo 1 &kp LALT            &kp SPACE                          &kp RALT  &kp RGUI &mo 1 &kp RCTRL
			>;
			//sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
		raise {
			bindings = <
				&kp ESC &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12 &kp DEL
				&trans &trans &kp UP &trans &kp INS &kp HOME &kp PG_UP &trans &trans &kp KP_NUMLOCK &kp PSCRN &kp UP &kp PAUSE_BREAK
				&CAPSLIGHT    &kp LEFT &kp DOWN &kp RIGHT &trans &kp END &kp PG_DN &trans &trans &Win_Lock &kp LEFT  &kp DOWN &kp RIGHT  &kp RET
				&kp LSHFT &kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE &bl BL_INC &bl BL_DEC &trans &trans &trans &rgb_ug RGB_TOG &kp END &kp PG_DN  &bl BL_TOG
				&kp LCTRL &trans &kp LALT            &kp SPACE                          &kp RALT  &kp RGUI &trans &kp RCTRL
			>;
			//sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
		higher {
			bindings = <
				&kp KP_NUM &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_N0 &trans &trans &sys_reset
				&trans &kp C_VOL_UP &bl BL_ON  &bl BL_INC &trans &trans &kp PG_UP &trans &trans &alt_o_0248 &bt BT_PRV &bt BT_NXT &bt BT_CLR
				&trans    &kp C_VOL_DN &bl BL_OFF &bl BL_DEC &trans &trans &kp PG_DN &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3  &bt BT_SEL 4 &bt BT_SEL 4  &bootloader
				&trans &kp C_MUTE &trans &bl BL_TOG &trans &bl BL_DEC &trans &trans &email &trans &trans &trans  &trans
				&kp LCTRL &trans &kp LALT            &kp SPACE                          &kp RALT  &kp RGUI &trans &kp RCTRL
			>;
		};
	};
};
